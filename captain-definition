{
  "schemaVersion": 2,
  "dockerfileLines": [
    "FROM php:8.2-apache",

    "# Soluciona problemas de repositorios y dependencias",
    "RUN apt-get update && \\",
    "    apt-get install -y --no-install-recommends \\",
    "    ca-certificates \\",
    "    gnupg \\",
    "    curl \\",
    "    && rm -rf /var/lib/apt/lists/*",

    "# Instala Node.js 18.x (mÃ¡s estable con PHP 8.2)",
    "RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \\",
    "    apt-get install -y nodejs && \\",
    "    npm install -g npm@latest",

    "# Instala dependencias PHP",
    "RUN apt-get update && \\",
    "    apt-get install -y \\",
    "    libzip-dev \\",
    "    zip \\",
    "    unzip \\",
    "    git \\",
    "    && docker-php-ext-install pdo_mysql zip",

    "# Instala Composer",
    "RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer",

    "# Configura PHP",
    "RUN echo 'memory_limit=512M' > /usr/local/etc/php/conf.d/memory-limit.ini && \\",
    "    echo 'max_execution_time=300' >> /usr/local/etc/php/conf.d/memory-limit.ini && \\",
    "    echo 'post_max_size=128M' >> /usr/local/etc/php/conf.d/memory-limit.ini && \\",
    "    echo 'upload_max_filesize=64M' >> /usr/local/etc/php/conf.d/memory-limit.ini",

    "# Configura Apache",
    "RUN a2enmod rewrite && \\",
    "    echo 'ServerName localhost' >> /etc/apache2/apache2.conf",

    "# Prepara el entorno",
    "WORKDIR /var/www/html",
    "COPY . .",

    "# Instala dependencias",
    "RUN composer install --no-dev --optimize-autoloader --no-interaction && \\",
    "    npm install && \\",
    "    npm run build",

    "# Configura permisos",
    "RUN chown -R www-data:www-data \\",
    "    /var/www/html/storage \\",
    "    /var/www/html/bootstrap/cache && \\",
    "    chmod -R 775 \\",
    "    /var/www/html/storage \\",
    "    /var/www/html/bootstrap/cache",

    "# Configura document root",
    "ENV APACHE_DOCUMENT_ROOT=/var/www/html/public",
    "RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf && \\",
    "    sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf",

    "# Entrypoint",
    "COPY docker-entrypoint.sh /usr/local/bin/",
    "RUN chmod +x /usr/local/bin/docker-entrypoint.sh",
    "ENTRYPOINT [\"docker-entrypoint.sh\"]",
    "CMD [\"apache2-foreground\"]"
  ]
}
